apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
/*生产ip:139.170.248.162:6051
测试ip：111.44.133.34:6050*/
def Base_Url = "\"http://139.170.248.162:6051/\""  //正式
def CBase_Url = "\"http://111.44.133.34:6050/\""   //测试

android {

    compileSdkVersion 31
    buildToolsVersion "30.0.3"
    defaultConfig {
        applicationId "tramais.hnb.hhrfid.test"
        minSdkVersion 21
        versionCode 234
        versionName "2.34"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi-v7a'/*,'armeabi', 'arm64-v8a'*/

        }
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        disable 'MissingTranslation'
    }
    android.applicationVariants.all { variant ->
        //判断是release还是debug版本
        def buildType = variant.buildType.name

        def id = defaultConfig.applicationId
        def fileName//获取当前时间的"YYYY-MM-dd"格式。
        def createTime = new Date().format("MM-dd-HH-mm", TimeZone.getTimeZone("GMT+08:00"))
        variant.outputs.each {
            if (buildType == 'release') {
                if (id.contains("test")) {
                    fileName = "qh_测试_v${defaultConfig.versionName}_${createTime}.apk"
                    it.outputFileName = fileName
                } else {
                    fileName = "qh_v${defaultConfig.versionName}_${createTime}.apk"
                    it.outputFileName = fileName
                }

            }/*else{
                fileName = "qh_测试_v${defaultConfig.versionName}_${createTime}.apk"
                it.outputFileName = fileName
            }*/
        }
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation files('libs/itext-asian-5.2.0.jar')
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'androidx.core:core-ktx:1.6.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.android.material:material:1.4.0'
//    implementation files('libs\\classes.jar')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.zhy:okhttputils:2.6.2'
    implementation files('libs/logutil-1.4.2.jar')
    implementation 'com.wang.avi:library:2.1.3'
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'com.squareup.okio:okio:3.0.0-alpha.4'
    implementation files('libs/cw-deviceapi20191022.jar')
    //noinspection GradleCompatible
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.alibaba:fastjson:1.1.72.android'
    implementation 'org.litepal.guolindev:core:3.2.3'
    implementation 'com.github.AlexLiuSheng:CheckVersionLib:2.4.1_androidx'
    implementation files('libs/BaiduLBS_Android.jar')
    //权限
    implementation 'com.mylhyl:acp:1.2.0'
    implementation 'com.contrarywind:Android-PickerView:4.1.9'

    implementation 'com.tencent.bugly:crashreport:3.4.4'


    implementation 'com.github.hackware1993:MagicIndicator:1.7.0'
    //Tab
    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'
    //轮播图
    implementation 'com.github.pinguo-zhouwei:MZBannerView:v2.0.2'
    //国源SDK
    implementation('com.grandtech.common:standard_sdk_prod:0.0.0.2.7:@aar') { transitive = true }
    // implementation('com.grandtech.common:standard_sdk_prod:0.0.0.1.5:@aar') { transitive = true }
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    // 基础依赖包，必须要依赖  沉浸式
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'
    // fragment快速实现（可选）
    implementation 'com.gyf.immersionbar:immersionbar-components:3.0.0'
    // kotlin扩展（可选）
    implementation 'com.gyf.immersionbar:immersionbar-ktx:3.0.0'
    implementation 'com.joanzapata.pdfview:android-pdfview:1.0.4@aar'

    implementation 'io.github.lucksiege:pictureselector:v2.7.3-rc05'

    //手势缩放控件
    // implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    //水印数字
    implementation 'com.huangyz0918:androidwm-light:0.1.2'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.0-alpha01'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"
    implementation project(':biometricprompt')

    //文字动画
    implementation 'com.github.AndroidMsky:RandomTextView:v1.4'

    implementation 'com.scwang.smart:refresh-layout-kernel:2.0.3'      //核心必须依赖
    implementation 'com.scwang.smart:refresh-footer-classics:2.0.3'    //经典加载
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'
    //侧滑删除
    implementation 'com.yanzhenjie.recyclerview:x:1.3.2'
    //屏幕适配
    implementation 'com.github.JessYanCoding:AndroidAutoSize:v1.2.1'
    implementation 'com.github.huangyanbin:SmartTable:2.2.0'
    // implementation 'de.hdodenhof:circleimageview:3.1.0'
    //照片选择已包含 luBan
   // implementation 'top.zibin:Luban:1.1.8'
    implementation project(':camerakit')

//    implementation 'com.camerakit:camerakit:1.0.0-beta3.11'
//    implementation 'com.camerakit:jpegkit:0.2.2'
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.1'


}
